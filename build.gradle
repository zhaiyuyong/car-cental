apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'eclipse'
sourceCompatibility = 1.5
mainClassName='com.xxx.car.CarApplication'
eclipse {
	project {
		name = 'car-ental'
	}
}
group = 'com.zyy.car'



repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://maven.oschina.net/content/groups/public/'}
    maven {	url 'http://repo.spring.io/milestone'    }
}
ext {
    springVersion = '4.1.4.RELEASE'
    springBootVersion = '1.2.5.RELEASE'
    springSecurityVersion = '3.2.5.RELEASE'
    springRedisVersion = '1.4.2.RELEASE'
    springElasticsearchVersion = '1.1.2.RELEASE'
    jacksonVersion = '2.5.1'
    jettisonVersion = '1.3.7'
    jsonpathVersion = '0.8.1'
    httpComponentsVersion = '4.3.3'
    logbackVersion = '1.1.2'
    aspectjVersion = '1.7.4'
    mysqlConnectorVersion = '5.1.34'
    junitVersion = '4.11'
    jodaVersion = '2.7'
    codecVersion = '1.10'
    mybatisVersion = '3.2.8'
    mybatisSpringVersion = '1.2.2'
    dbcpVersion = '1.4'
    jedisVersion = '2.6.2'
    commonsPoolVersion = '2.0'
    liquibaseVersion = '3.3.2'
    gradleLiquibaseVersion = '1.0.0'
    qqConnectVersion = '1.0.2'
    fastjsonVersion = '1.2.3'
    httpclientVersion = '4.3.6'
    bcprovVersion = '1.45'
    jschVersion = '1.9.4'
    commonsIoVersion = '2.4'
    commonsFileuploadVersion = '1.2.2'
    tikaCoreVersion = '1.4'
    jsoupVersion = '1.8.3'
    //devtoolsVersion = '1.3.0.M5'
}
ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

dependencies {
    compile jarTree

    compile 'org.springframework:spring-jdbc:' + springVersion

    compile ('org.springframework.boot:spring-boot-starter-web:' + springBootVersion) {
        exclude module: "spring-boot-starter-tomcat"
    }

    compile 'org.springframework.boot:spring-boot-starter-jetty:' + springBootVersion
    compile 'org.springframework.boot:spring-boot-starter-actuator:' + springBootVersion
    
    
    compile 'org.springframework.security:spring-security-web:' + springSecurityVersion
    compile 'org.springframework.security:spring-security-core:' + springSecurityVersion
    compile 'org.springframework.security:spring-security-config:' + springSecurityVersion

	compile 'io.reactivex:rxjava:1.0.12'
	compile 'io.netty:netty-example:4.0.9.Final'
	
	
	// Tools used to create ORM for database
    compile 'org.mybatis:mybatis:' + mybatisVersion
    compile 'org.mybatis:mybatis-spring:' + mybatisSpringVersion
    
    compile 'com.alibaba:druid:1.0.16'
    
     // The database driver for MySQL here
    compile 'mysql:mysql-connector-java:' + mysqlConnectorVersion

}

version = '1.0.0'

jar {
    manifest.attributes provider: 'car'
}

buildscript {
    ext {
        gradleLiquibaseVersion = '1.0.0'
        mysqlConnectorVersion = '5.1.34'
        springBootVersion = '1.2.5.RELEASE'
    }

    repositories {
        mavenCentral()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenLocal()
        
        maven {url 'http://maven.oschina.net/content/groups/public/'}
   		maven {	url 'http://repo.spring.io/milestone'    }
    }

    dependencies {
        //classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion
        // The database driver for MySQL here
        classpath 'mysql:mysql-connector-java:' + mysqlConnectorVersion
        classpath 'net.saliman:gradle-liquibase-plugin:' + gradleLiquibaseVersion

        //To provide remote execution and file transfer features for project release
        classpath 'org.hidetake:gradle-ssh-plugin:0.3.11'
        
    }
}
